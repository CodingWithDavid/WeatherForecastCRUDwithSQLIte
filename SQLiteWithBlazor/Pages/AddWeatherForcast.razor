@page "/addWeatherForecast"

<PageTitle>Add Weather forecast</PageTitle>

@inject WeatherForecastService ForecastService
@inject AppDataService appService
@inject NavigationManager navManager
@inject IToastService toastService

<article class="pl-4 pr-3 pt-0 block flex justify-center items-center  overflow-hidden">
        <div class="bg-gray-100 rounded shadow-2xl p-8 m-4 w-2/4 sm:w-72">
            <span class="block w-full text-center text-gray-800 text-2xl font-bold mb-6">@title</span>
            <form action="/" method="post">
                <div class="flex flex-col mb-4">
                    <label class="mb-2 font-bold text-lg text-gray-900" for="date">Date</label>
                    <input class="text-xs md:text-lg w-28 md:w-40 border py-2 px-3 text-grey-800" type="date" id="date" @bind-value=forecast.Date>
                </div>
                <div class="flex flex-col mb-4">
                    <label class="mb-2 font-bold text-lg text-gray-900" for="temp">Temp(C)</label>
                <input class="w-28 border py-2 px-3 text-grey-800" type="number" id="temp" required @bind-value=forecast.TemperatureC>
                </div>
                <div class="flex flex-col mb-4">
                    <label class="mb-2 font-bold text-lg text-gray-900" for="submit">Summary</label>
                <input class="w-28 border py-2 px-3 text-grey-800" type="text" id="summary" required @bind-value=forecast.Summary>
                </div>
                <div class="flex flex-col md:flex-row">
                    <button class="block bg-gray-600 hover:bg-gray-800 text-white uppercase text-lg mx-auto mb-2 pt-1 pb-2 pl-10 pr-10 md:pl-6 md:pr-6 rounded h-10" type="button" @onclick=Submit>Save</button>
                    <button class="block bg-gray-600 hover:bg-gray-800 text-white uppercase text-lg mx-auto pb-2 pt-1 pl-7 md:pl-6 pr-6 rounded h-10" type="button" @onclick=Close>Cancel</button>
                </div>
                
            </form>
        </div>
    </article>

@code {

    private WeatherForecast forecast = new();
    private bool addingNew = true;
    private string title = "Add Forecast";


    protected override void OnInitialized()
    {
        if (appService.WeatherForecast != null)
        {
            //goto get the weather forecast
            forecast = appService.WeatherForecast;
            addingNew = false;
            title = "Edit Forecast";
        }
        else
        {
            forecast.Date = DateTime.Now;
        }
    }


    private async Task Submit()
    {
        if (addingNew)
        {
            //validate entires 
            if (!forecast.Validate())
            {
                //toast
                toastService.ShowError("All fields must be populated");
            }
            else
            {
                //Save to Database
                if (await ForecastService.AddForeCast(forecast))
                {
                    appService.ActionResult = "New Forecast item was added";
                }
                else
                {
                    appService.ErrorMessage = "Unable to add forecast record";
                }
            }
        }
        else
        {
            //Save to Database
            if (await ForecastService.UpdateForeCast(forecast))
            {
                appService.ActionResult = "Forecast item was updated";
            }
            else
            {
                appService.ErrorMessage = "Unable to update forecast record";
            }
            //Go back to list page
            navManager.NavigateTo($"/fetchdata");
        }
    }

    private async Task Close()
    {
        //Go back to list page
        appService.ActionResult = string.Empty;
        navManager.NavigateTo("/fetchdata");
        await Task.CompletedTask;
    }
}
